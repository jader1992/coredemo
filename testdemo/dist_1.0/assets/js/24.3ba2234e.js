(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{490:function(t,n,e){"use strict";e.r(n);var i=e(61),s=Object(i.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"gocore-config"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gocore-config"}},[this._v("#")]),this._v(" gocore:config")]),this._v(" "),n("p",[this._v("提供基础的配置文件获取方法")]),this._v(" "),n("div",{staticClass:"language-golang extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('package contract\n\nimport "time"\n\nconst (\n\t// ConfigKey is config key in container\n\tConfigKey = "gocore:config"\n)\n\n// Config define setting from files, it support key contains dov。\n// for example:\n// .Get("user.name")\n// suggest use yaml format, https://yaml.org/spec/1.2/spec.html\ntype Config interface {\n\t// IsExist check setting is exist\n\tIsExist(key string) bool\n\n\t// Get a new interface\n\tGet(key string) interface{}\n\t// GetBool get bool type\n\tGetBool(key string) bool\n\t// GetInt get Int type\n\tGetInt(key string) int\n\t// GetFloat64 get float64\n\tGetFloat64(key string) float64\n\t// GetTime get time type\n\tGetTime(key string) time.Time\n\t// GetString get string typen\n\tGetString(key string) string\n\n\t// GetIntSlice get int slice type\n\tGetIntSlice(key string) []int\n\t// GetStringSlice get string slice type\n\tGetStringSlice(key string) []string\n\n\t// GetStringMap get map which key is string, value is interface\n\tGetStringMap(key string) map[string]interface{}\n\t// GetStringMapString get map which key is string, value is string\n\tGetStringMapString(key string) map[string]string\n\t// GetStringMapStringSlice get map which key is string, value is string slice\n\tGetStringMapStringSlice(key string) map[string][]string\n\n\t// Load a config to a struct, val should be an pointer\n\tLoad(key string, val interface{}) error\n}\n\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);