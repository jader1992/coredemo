(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{477:function(a,n,o){"use strict";o.r(n);var e=o(61),t=Object(e.a)({},(function(){var a=this,n=a.$createElement,o=a._self._c||n;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("h1",{attrs:{id:"命令"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[a._v("#")]),a._v(" 命令")]),a._v(" "),o("h2",{attrs:{id:"指南"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#指南"}},[a._v("#")]),a._v(" 指南")]),a._v(" "),o("p",[a._v("gocore 允许自定义命令，挂载到 gocore 上。并且提供了"),o("code",[a._v("./gocore command")]),a._v(" 系列命令。")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v('[~/Documents/workspace/gocore_workspace]$ ./gocore command\nall about commond\n\nUsage:\n  gocore command [flags]\n  gocore command [command]\n\nAvailable Commands:\n  list        show all command list\n  new         create a command\n\nFlags:\n  -h, --help   help for command\n\nUse "gocore command [command] --help" for more information about a command.\n')])])]),o("ul",[o("li",[a._v("list  // 列出当前所有已经挂载的命令列表")]),a._v(" "),o("li",[a._v("new   // 创建一个新的自定义命令")])]),a._v(" "),o("h2",{attrs:{id:"创建"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[a._v("#")]),a._v(" 创建")]),a._v(" "),o("p",[a._v("创建一个新命令，可以使用 "),o("code",[a._v("./gocore command new")])]),a._v(" "),o("p",[a._v("这是一个交互式的命令行工具。")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v("[~/Documents/workspace/gocore_workspace/]$ ./gocore command new\ncreate a new command...\n? please input command name: test\n? please input file name(default: command name):\ncreate new command success，file path: /Users/Documents/workspace/gocore_workspace//app/console/command/test.go\nplease remember add command to console/kernel.go\n")])])]),o("p",[a._v("创建完成之后，会在应用的 app/console/command/ 目录下创建一个新的文件。")]),a._v(" "),o("h2",{attrs:{id:"自定义"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#自定义"}},[a._v("#")]),a._v(" 自定义")]),a._v(" "),o("p",[a._v("gocore 中的命令使用的是 cobra 库。 https://github.com/spf13/cobra")]),a._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v('package command\n\nimport (\n        "fmt"\n\n        "github.com/gogocore/gocore/framework/cobra"\n        "github.com/gogocore/gocore/framework/command/util"\n)\n\nvar TestCommand = &cobra.Command{\n        Use:   "test",\n        Short: "test",\n        RunE: func(c *cobra.Command, args []string) error {\n                container := util.GetContainer(c.Root())\n                fmt.Println(container)\n                return nil\n        },\n}\n\n')])])]),o("p",[a._v("基本上，我们要求实现")]),a._v(" "),o("ul",[o("li",[a._v("Use // 命令行的关键字")]),a._v(" "),o("li",[a._v("Short // 命令行的简短说明")]),a._v(" "),o("li",[a._v("RunE // 命令行实际运行的程序")])]),a._v(" "),o("p",[a._v("更多配置和参数可以参考 "),o("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[a._v("cobra 的 github 页面"),o("OutboundLink")],1)]),a._v(" "),o("h2",{attrs:{id:"挂载"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#挂载"}},[a._v("#")]),a._v(" 挂载")]),a._v(" "),o("p",[a._v("编写完自定义命令后，请记得挂载到 console/kernel.go 中。")]),a._v(" "),o("div",{staticClass:"language-golang extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[a._v('func RunCommand(container framework.Container) error {\n\tvar rootCmd = &cobra.Command{\n\t\tUse:   "gocore",\n\t\tShort: "main",\n\t\tLong:  "gocore commands",\n\t}\n\n\tctx := commandUtil.RegiestContainer(container, rootCmd)\n\n\tgocoreCommand.AddKernelCommands(rootCmd)\n\n    rootCmd.AddCommand(command.DemoCommand)\n\n\treturn rootCmd.ExecuteContext(ctx)\n}\n\n')])])])])}),[],!1,null,null,null);n.default=t.exports}}]);